import express from "express";
import cors from "cors";
import dotenv from "dotenv";
import { GoogleGenerativeAI } from "@google/generative-ai";

dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

const genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY);

const premanandQuotes = [
  "‡§ú‡•Ä‡§µ‡§® ‡§Æ‡•á‡§Ç ‡§ú‡•ã ‡§ï‡•Å‡§õ ‡§≠‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç ‡§Ü‡§§‡•Ä ‡§π‡•à‡§Ç, ‡§µ‡•á ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Æ‡§® ‡§ï‡•Ä ‡§¶‡•á‡§® ‡§π‡•à‡§Ç‡•§ ‡§Æ‡§® ‡§ï‡•ã ‡§∂‡§æ‡§Ç‡§§ ‡§∞‡§ñ‡•ã, ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç ‡§Ö‡§™‡§®‡•á ‡§Ü‡§™ ‡§π‡§≤ ‡§π‡•ã ‡§ú‡§æ‡§è‡§Ç‡§ó‡•Ä‡•§",
  "‡§™‡•ç‡§∞‡•á‡§Æ ‡§π‡•Ä ‡§™‡§∞‡§Æ‡§æ‡§§‡•ç‡§Æ‡§æ ‡§π‡•à‡•§ ‡§ú‡§π‡§æ‡§Ç ‡§™‡•ç‡§∞‡•á‡§Æ ‡§π‡•à, ‡§µ‡§π‡§æ‡§Ç ‡§≠‡§ó‡§µ‡§æ‡§® ‡§ï‡§æ ‡§µ‡§æ‡§∏ ‡§π‡•à‡•§",
  "‡§ï‡•ç‡§∞‡•ã‡§ß ‡§Æ‡•á‡§Ç ‡§Ü‡§¶‡§Æ‡•Ä ‡§Ö‡§™‡§®‡•Ä ‡§∏‡§æ‡§∞‡•Ä ‡§Ö‡§ï‡•ç‡§≤ ‡§ñ‡•ã ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ‡§ï‡•ç‡§∞‡•ã‡§ß ‡§∏‡•á ‡§¨‡§ö‡§®‡§æ ‡§π‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡•Ä ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§®‡•Ä ‡§π‡•à‡•§",
  "‡§≠‡§ó‡§µ‡§æ‡§® ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§≤‡•á‡§®‡•á ‡§∏‡•á ‡§∏‡§≠‡•Ä ‡§ï‡§∑‡•ç‡§ü ‡§¶‡•Ç‡§∞ ‡§π‡•ã ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§∞‡§æ‡§Æ ‡§®‡§æ‡§Æ ‡§∏‡§§‡•ç‡§Ø ‡§π‡•à‡•§",
  "‡§∏‡§Ç‡§∏‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ñ-‡§¶‡•Å‡§ñ ‡§Ü‡§§‡•á-‡§ú‡§æ‡§§‡•á ‡§∞‡§π‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§∏‡•ç‡§•‡§ø‡§∞ ‡§Æ‡§® ‡§∏‡•á ‡§á‡§®‡•ç‡§π‡•á‡§Ç ‡§∏‡§π‡§® ‡§ï‡§∞‡§®‡§æ ‡§π‡•Ä ‡§Ø‡•ã‡§ó ‡§π‡•à‡•§",
  "‡§¶‡•Ç‡§∏‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§≠‡§≤‡§æ‡§à ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡§æ ‡§≠‡§≤‡§æ ‡§õ‡•Å‡§™‡§æ ‡§π‡•Å‡§Ü ‡§π‡•à‡•§ ‡§∏‡•á‡§µ‡§æ ‡§™‡§∞‡§Æ ‡§ß‡§∞‡•ç‡§Æ ‡§π‡•à‡•§",
  "‡§ú‡§¨ ‡§§‡§ï ‡§Ö‡§π‡§Ç‡§ï‡§æ‡§∞ ‡§π‡•à, ‡§§‡§¨ ‡§§‡§ï ‡§∏‡•Å‡§ñ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤ ‡§∏‡§ï‡§§‡§æ‡•§ ‡§µ‡§ø‡§®‡§Æ‡•ç‡§∞‡§§‡§æ ‡§π‡•Ä ‡§∏‡§ö‡•ç‡§ö‡•Ä ‡§∂‡§ï‡•ç‡§§‡§ø ‡§π‡•à‡•§",
  "‡§™‡§∞‡§Æ‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ï‡•á ‡§∏‡§æ‡§Æ‡§®‡•á ‡§∏‡§¨ ‡§¨‡§∞‡§æ‡§¨‡§∞ ‡§π‡•à‡§Ç‡•§ ‡§ú‡§æ‡§§-‡§™‡§æ‡§§, ‡§ä‡§Ç‡§ö-‡§®‡•Ä‡§ö ‡§∏‡§¨ ‡§Æ‡§æ‡§Ø‡§æ ‡§π‡•à‡•§",
  "‡§ß‡•à‡§∞‡•ç‡§Ø ‡§∞‡§ñ‡•ã, ‡§≠‡§ó‡§µ‡§æ‡§® ‡§ï‡§æ ‡§∏‡§Æ‡§Ø ‡§∏‡§¨‡§∏‡•á ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§ ‡§ú‡•ã ‡§π‡•ã‡§®‡§æ ‡§π‡•à, ‡§µ‡•ã ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§",
  "‡§∏‡§§‡•ç‡§∏‡§Ç‡§ó ‡§∏‡•á ‡§ú‡•Ä‡§µ‡§® ‡§¨‡§¶‡§≤ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§∏‡§Ç‡§ó‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§∞‡§π‡•ã, ‡§¨‡•Å‡§∞‡•Ä ‡§Ü‡§¶‡§§‡•á‡§Ç ‡§õ‡•Ç‡§ü ‡§ú‡§æ‡§è‡§Ç‡§ó‡•Ä‡•§",
  "‡§Æ‡§æ‡§´ ‡§ï‡§∞‡§®‡§æ ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§ó‡•Å‡§£ ‡§π‡•à‡•§ ‡§¶‡§ø‡§≤ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§∏‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡•Å‡§∞‡§æ‡§à ‡§Æ‡§§ ‡§∞‡§ñ‡•ã‡•§",
  "‡§∏‡§Ç‡§§‡•ã‡§∑ ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§ß‡§® ‡§π‡•à‡•§ ‡§ú‡•ã ‡§Æ‡§ø‡§≤‡§æ ‡§π‡•à, ‡§â‡§∏‡§Æ‡•á‡§Ç ‡§ñ‡•Å‡§∂ ‡§∞‡§π‡•ã‡•§",
  "‡§≠‡§ï‡•ç‡§§‡§ø ‡§ï‡§∞‡§®‡•á ‡§∏‡•á ‡§Æ‡§® ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Ç‡§§‡§ø ‡§Ü‡§§‡•Ä ‡§π‡•à‡•§ ‡§™‡•ç‡§∞‡§≠‡•Å ‡§ï‡§æ ‡§∏‡•ç‡§Æ‡§∞‡§£ ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡•Ä ‡§¶‡§µ‡§æ ‡§π‡•à‡•§",
  "‡§ú‡§ø‡§Ç‡§¶‡§ó‡•Ä ‡§è‡§ï ‡§®‡§æ‡§ü‡§ï ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§π‡•à‡•§ ‡§Ö‡§™‡§®‡§æ ‡§ï‡§ø‡§∞‡§¶‡§æ‡§∞ ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§∏‡•á ‡§®‡§ø‡§≠‡§æ‡§ì, ‡§´‡§ø‡§∞ ‡§ö‡§≤‡•á ‡§ú‡§æ‡§®‡§æ ‡§π‡•à‡•§",
  "‡§∏‡§ö‡•ç‡§ö‡§æ ‡§™‡•ç‡§∞‡•á‡§Æ ‡§ï‡§≠‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§∞‡§§‡§æ‡•§ ‡§™‡•ç‡§∞‡•á‡§Æ ‡§Æ‡•á‡§Ç ‡§π‡•Ä ‡§™‡§∞‡§Æ‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ï‡§æ ‡§¶‡§∞‡•ç‡§∂‡§® ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§"
];

function getRelevantQuote(prompt) {
  const text = prompt.toLowerCase();
  if (text.includes("‡§ó‡•Å‡§∏‡•ç‡§∏‡§æ") || text.includes("‡§ï‡•ç‡§∞‡•ã‡§ß")) return premanandQuotes[2];
  if (text.includes("‡§™‡•ç‡§∞‡•á‡§Æ") || text.includes("‡§™‡•ç‡§Ø‡§æ‡§∞")) return premanandQuotes[1];
  if (text.includes("‡§¶‡•Å‡§É‡§ñ") || text.includes("‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ") || text.includes("problem")) return premanandQuotes[0];
  if (text.includes("‡§ß‡§®") || text.includes("‡§™‡•à‡§∏‡§æ")) return premanandQuotes[11];
  if (text.includes("‡§Æ‡§æ‡§´")) return premanandQuotes[10];
  if (text.includes("‡§Ö‡§π‡§Ç‡§ï‡§æ‡§∞")) return premanandQuotes[6];
  if (text.includes("‡§ß‡•à‡§∞‡•ç‡§Ø")) return premanandQuotes[8];
  if (text.includes("‡§≠‡§ï‡•ç‡§§‡§ø") || text.includes("‡§™‡•ç‡§∞‡§æ‡§∞‡•ç‡§•‡§®‡§æ")) return premanandQuotes[12];
  return null;
}

function getSolution(prompt) {
  const text = prompt.toLowerCase();
  if (text.includes("‡§ó‡•Å‡§∏‡•ç‡§∏‡§æ") || text.includes("‡§ï‡•ç‡§∞‡•ã‡§ß"))
    return "‡§ú‡§¨ ‡§ó‡•Å‡§∏‡•ç‡§∏‡§æ ‡§Ü‡§è ‡§§‡•ã ‡§ó‡§π‡§∞‡•Ä ‡§∏‡§æ‡§Ç‡§∏ ‡§≤‡•á‡§Ç, '‡§∞‡§æ‡§Æ ‡§∞‡§æ‡§Æ' ‡§ï‡§æ ‡§ú‡§æ‡§™ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ï‡•Å‡§õ ‡§¶‡•á‡§∞ ‡§Æ‡•å‡§® ‡§∞‡§π‡•á‡§Ç‡•§";
  if (text.includes("‡§§‡§®‡§æ‡§µ") || text.includes("stress"))
    return "‡§∞‡•ã‡§ú ‡§∏‡•Å‡§¨‡§π ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§æ‡§£‡§æ‡§Ø‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Æ‡§® ‡§ï‡•ã ‡§è‡§ï‡§æ‡§ó‡•ç‡§∞ ‡§ï‡§∞‡•á‡§Ç‡•§";
  if (text.includes("‡§∞‡§ø‡§∂‡•ç‡§§‡§æ"))
    return "‡§∞‡§ø‡§∂‡•ç‡§§‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡•á‡§Æ ‡§î‡§∞ ‡§ï‡•ç‡§∑‡§Æ‡§æ ‡§∏‡§¨‡§∏‡•á ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à‡•§ ‡§∏‡§Ç‡§µ‡§æ‡§¶ ‡§∏‡•á ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§®‡§ø‡§ï‡§≤‡§§‡§æ ‡§π‡•à‡•§";
  if (text.includes("‡§ï‡§æ‡§Æ") || text.includes("career"))
    return "‡§Æ‡•á‡§π‡§®‡§§ ‡§î‡§∞ ‡§à‡§Æ‡§æ‡§®‡§¶‡§æ‡§∞‡•Ä ‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç, ‡§´‡§≤ ‡§ï‡•Ä ‡§ö‡§ø‡§Ç‡§§‡§æ ‡§à‡§∂‡•ç‡§µ‡§∞ ‡§™‡§∞ ‡§õ‡•ã‡§°‡§º ‡§¶‡•á‡§Ç‡•§";
  if (text.includes("‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø"))
    return "‡§Ø‡•ã‡§ó, ‡§∏‡§Ç‡§Ø‡§Æ‡§ø‡§§ ‡§Ü‡§π‡§æ‡§∞ ‡§î‡§∞ ‡§≠‡§∞‡§™‡•Ç‡§∞ ‡§®‡•Ä‡§Ç‡§¶ ‚Äì ‡§Ø‡•á ‡§π‡•Ä ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á ‡§∏‡•ç‡§§‡§Ç‡§≠ ‡§π‡•à‡§Ç‡•§";
  if (text.includes("‡§™‡•à‡§∏‡§æ"))
    return "‡§ï‡§Æ‡§æ‡§à ‡§ï‡§æ ‡§ï‡•Å‡§õ ‡§π‡§ø‡§∏‡•ç‡§∏‡§æ ‡§∏‡•á‡§µ‡§æ ‡§Æ‡•á‡§Ç ‡§≤‡§ó‡§æ‡§è‡§Ç, ‡§î‡§∞ ‡§¨‡§ö‡§§ ‡§ï‡•Ä ‡§Ü‡§¶‡§§ ‡§°‡§æ‡§≤‡•á‡§Ç‡•§";
  return null;
}

function isSmallTalk(prompt) {
  const smallTalkKeywords = [
    "hello", "hi", "‡§®‡§Æ‡§∏‡•ç‡§§‡•á", "‡§ï‡•à‡§∏‡•á ‡§π‡•ã", "thanks", "‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶", "‡§†‡•Ä‡§ï", "you there", "ok", "bye", "goodbye"
  ];
  return smallTalkKeywords.some(word => prompt.toLowerCase().includes(word));
}

app.post("/chat", async (req, res) => {
  try {
    const userPrompt = req.body.prompt;
    const relevantQuote = getRelevantQuote(userPrompt);
    const practicalSolution = getSolution(userPrompt);
    const shortReply = isSmallTalk(userPrompt);

    const includeSignature = Math.random() < 0.4;
    const closingNote = includeSignature
      ? `\n\n‡§Æ‡•á‡§∞‡•á ‡§™‡•ç‡§∞‡§ø‡§Ø,\n‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡§æ ‡§Æ‡§® ‡§Ö‡§∂‡§æ‡§Ç‡§§ ‡§π‡•à, ‡§Ø‡§π ‡§Æ‡•à‡§Ç ‡§ú‡§æ‡§®‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§Ø‡§π ‡§∏‡•ç‡§µ‡§≠‡§æ‡§µ ‡§∏‡•á ‡§π‡•Ä ‡§ö‡§Ç‡§ö‡§≤ ‡§π‡•à‡•§ ‡§™‡§∞‡§Ç‡§§‡•Å ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§î‡§∞ ‡§µ‡•à‡§∞‡§æ‡§ó‡•ç‡§Ø ‡§∏‡•á ‡§á‡§∏‡•á ‡§µ‡§∂ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§\n‡§∏‡§¶‡§æ ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡§æ,\n‡§™‡•ç‡§∞‡•á‡§Æ‡§æ‡§®‡§Ç‡§¶‡•§`
      : "";

    const prompt = `
‡§Ü‡§™ \"‡§™‡•ç‡§∞‡•á‡§Æ‡§æ‡§®‡§Ç‡§¶ ‡§ú‡•Ä ‡§Æ‡§π‡§æ‡§∞‡§æ‡§ú\" ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§§‡•ç‡§§‡§∞ ‡§¶‡•á‡§Ç‡§ó‡•á‡•§ ‡§Ü‡§™‡§ï‡•Ä ‡§µ‡§æ‡§£‡•Ä **‡§Æ‡§ß‡•Å‡§∞**, **‡§ï‡§∞‡•Å‡§£‡§æ‡§Æ‡§Ø‡•Ä** ‡§î‡§∞ **‡§Ü‡§§‡•ç‡§Æ‡§æ ‡§ï‡•ã ‡§∂‡§æ‡§Ç‡§§‡§ø ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä** ‡§π‡•ã‡§®‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è‡•§ ‡§â‡§§‡•ç‡§§‡§∞ **‡§ï‡•á‡§µ‡§≤ ‡§π‡§ø‡§Ç‡§¶‡•Ä (‡§¶‡•á‡§µ‡§®‡§æ‡§ó‡§∞‡•Ä ‡§≤‡§ø‡§™‡§ø)** ‡§Æ‡•á‡§Ç ‡§π‡•ã‡•§

üìú ‡§â‡§§‡•ç‡§§‡§∞ ‡§ï‡•ã **Markdown ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü** ‡§Æ‡•á‡§Ç ‡§¶‡•Ä‡§ú‡§ø‡§è ‡§§‡§æ‡§ï‡§ø ‡§µ‡§π ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§∏‡•Å‡§Ç‡§¶‡§∞ ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡•á‡•§

üí° ‡§â‡§§‡•ç‡§§‡§∞ ${shortReply ? "**3‚Äì4 ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç**" : "**8‚Äì10 ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç**"} ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è ‚Äî ‡§®‡§æ ‡§¨‡§π‡•Å‡§§ ‡§õ‡•ã‡§ü‡§æ, ‡§®‡§æ ‡§¨‡§π‡•Å‡§§ ‡§≤‡§Ç‡§¨‡§æ‡•§

---

üî∂ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§®‡§ø‡§Æ‡•ç‡§®‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§Ø‡§Æ‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç:

- **‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡§æ‡§ï‡•ç‡§Ø** ‡§ï‡•ã \`**bold**\` ‡§ï‡§∞‡•á‡§Ç  
- *‡§ï‡•ã‡§Æ‡§≤/‡§∏‡§Ç‡§µ‡•á‡§¶‡§®‡§∂‡•Ä‡§≤ ‡§¨‡§æ‡§§‡•ã‡§Ç* ‡§ï‡•ã \`*italic*\` ‡§ï‡§∞‡•á‡§Ç  
- ‡§ú‡§π‡§æ‡§Å ‡§ú‡§º‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•ã ‡§µ‡§π‡§æ‡§Å \`###\` heading ‡§∏‡•á ‡§Ö‡§®‡•Å‡§≠‡§æ‡§ó ‡§¶‡•á‡§Ç (‡§ú‡•à‡§∏‡•á ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§µ‡§æ‡§£‡•Ä, ‡§Ü‡§¶‡§ø)  
- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§Ø‡§æ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§ï‡•ã \`- bullet points\` ‡§Æ‡•á‡§Ç ‡§∞‡§ñ‡•á‡§Ç  
- ‡§Æ‡§Ç‡§§‡•ç‡§∞, ‡§â‡§¶‡•ç‡§ß‡§∞‡§£ ‡§Ø‡§æ ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂ ‡§ï‡•ã \`code block\` (\`\`\`) ‡§Æ‡•á‡§Ç ‡§∞‡§ñ‡•á‡§Ç  
- ‡§â‡§§‡•ç‡§§‡§∞ ‡§ï‡•á‡§µ‡§≤ Markdown ‡§Æ‡•á‡§Ç ‡§π‡•ã ‚Äî HTML ‡§Ø‡§æ styling tag ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§® ‡§ï‡§∞‡•á‡§Ç  
- ‡§â‡§§‡•ç‡§§‡§∞ ‡§≠‡§ï‡•ç‡§§‡§ø‡§Æ‡§Ø ‡§î‡§∞ ‡§∏‡§ï‡§æ‡§∞‡§æ‡§§‡•ç‡§Æ‡§ï ‡§ä‡§∞‡•ç‡§ú‡§æ ‡§∏‡•á ‡§≠‡§∞‡§™‡•Ç‡§∞ ‡§π‡•ã

---

${practicalSolution ? `### üõ†Ô∏è ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®\n- ${practicalSolution}` : ""}
${relevantQuote ? `\n\n### üåº ‡§™‡•ç‡§∞‡•á‡§Æ‡§æ‡§®‡§Ç‡§¶ ‡§µ‡§æ‡§£‡•Ä\n- \"${relevantQuote}\"` : ""}

---

### üôè ‡§™‡•ç‡§∞‡§∂‡•ç‡§®:
${userPrompt}

---

üôè *‡§â‡§§‡•ç‡§§‡§∞ ‡§¶‡•Ä‡§ú‡§ø‡§è (${shortReply ? "‡§∏‡§Ç‡§ï‡•ç‡§∑‡§ø‡§™‡•ç‡§§" : "‡§∏‡§æ‡§∞‡§ó‡§∞‡•ç‡§≠‡§ø‡§§"} ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç)*:${closingNote ? `\n\n${closingNote}` : ""}
`;

    const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash" });
    const result = await model.generateContent(prompt);
    const reply = result.response.text();

    res.json({ reply });
  } catch (error) {
    console.error("‚ùå Gemini API Error:", error);
    res.status(500).json({ reply: "üôè ‡§ï‡•ç‡§∑‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•Å‡§õ ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•ã ‡§ó‡§à ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§" });
  }
});

const PORT = process.env.PORT || 4000;
app.listen(PORT, () => {
  console.log(`‚úÖ ‡§™‡•ç‡§∞‡•á‡§Æ‡§æ‡§®‡§Ç‡§¶ ‡§ú‡•Ä ‡§ï‡§æ ‡§Ü‡§∂‡•Ä‡§∞‡•ç‡§µ‡§æ‡§¶! Server ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à: http://localhost:${PORT}`);
});
